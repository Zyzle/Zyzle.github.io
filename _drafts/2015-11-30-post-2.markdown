---
layout: post
title:  "Blogging with Jekyll + Material Design Lite"
date:   2015-11-30 00:03:57
author: "Zyzle"
img: "jekyll.jpg"
img_link: "https://en.wikipedia.org/wiki/Strange_Case_of_Dr_Jekyll_and_Mr_Hyde#/media/File:Dr_Jekyll_and_Mr_Hyde_poster_edit2.jpg"
img_license: ["by", "sa"]
tags: ["blog", "tools", "liquid", "ruby", "meta"]
---

## My First Blog Post

Between my work as a software developer and the time I spend on my own little projects, (mostly fun ideas sitting unfinished but thats for another post), I come across some interesting and often baffling problems. So I thought, why not keep a note of these somewhere? Everyone else seems to have a blog these days so why not me too.

### Where to put this?

The answer to this one seemed simple, [Github Pages](https://pages.github.com/) seemed like the obvious choice. As a registered user on Github you can simply create a repository called ***yourusername***.**github.io** and the contents of this repository's master branch will be available online at that address. Which leads me nicely on to...

### Which tool to use?

Another benefit of using Github pages is it's integration with the static site and blog generator tool [Jekyll](https://jekyllrb.com/).  Looking through the documentation this seemed exactly like the sort of tool I was looking for:

* The sites are automatically generated by Github whenever new content is pushed to master
* Posts can be written in [Markdown](https://daringfireball.net/projects/markdown/) plain text markup, great for versioning in git
* [Liquid](http://liquidmarkup.org/) template language is easy to use, syntax is similar to Jinja2/DTL

### Getting Started

Having never really used Ruby before my system (Ubuntu 15.04) seemed to contain a fairly basic setup. From past experience with Python and Node I know the best way to go with developing is to try and sandbox your environment.  

In Python I'd use *virtualenv* and *nvm* for node so I hoped there was a similar tool available for Ruby. As it turns out there is [RVM](https://rvm.io/), this works similar to nvm in that it lets you have side by side versions of ruby installed, each with their own self contained gem sets.

Speaking of gem sets Github handily provides it's own set which contains all the supported plugins Github Jekyll pages have access to.

{% highlight bash %}
rvm use 2.2.3 # use Ruby version 2.2.3 for this console session
gem install github-pages
{% endhighlight %}

So what does this give us? Well the list for the github-pages gem is [here](https://pages.github.com/versions/).  Lets be honest thats a pretty short list
